{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { List, Text, TextInput } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AppContext } from \"../scripts/AppContext\";\nimport { broadcastTextMessage, onTextMessageReceive } from \"../scripts/Socket\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home() {\n  var appContext = useContext(AppContext);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    textMessage = _useState2[0],\n    setTextMessage = _useState2[1];\n  var _useState3 = useState([{\n      id: uuidv4(),\n      message: 'this is a message. its still sending...',\n      fullname: \"You\",\n      user: appContext.clientId,\n      timestamp: new Date().getTime(),\n      timezoneOffset: new Date().getTimezoneOffset(),\n      sent: false,\n      own: true\n    }, {\n      id: uuidv4(),\n      message: 'this is another message',\n      fullname: \"You\",\n      user: appContext.clientId,\n      timestamp: new Date().getTime() - 10000,\n      timezoneOffset: new Date().getTimezoneOffset(),\n      sent: true,\n      own: true\n    }, {\n      id: uuidv4(),\n      message: 'this is yet another message, but this time its not from me.',\n      fullname: \"Joe Biden\",\n      user: 'nugget',\n      timestamp: new Date().getTime() - 30000,\n      timezoneOffset: new Date().getTimezoneOffset(),\n      sent: true,\n      own: false\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messagesList = _useState4[0],\n    setMessagesList = _useState4[1];\n  var theme = appContext.themes.current();\n  var onSubmitTextMessage = function onSubmitTextMessage() {\n    setTextMessage(\"\");\n    broadcastTextMessage({\n      id: uuidv4(),\n      message: textMessage,\n      fullname: appContext.clientName,\n      userId: appContext.clientId,\n      timestamp: new Date().getTime(),\n      timezoneOffset: new Date().getTimezoneOffset()\n    });\n  };\n  onTextMessageReceive(function (m) {\n    var messagesIds = messagesList.map(function (a) {\n      return a.id;\n    });\n    var confirmingMessage = messagesIds.find(m.id);\n    if (m.user === appContext.clientId && confirmingMessage !== undefined) {\n      var newMessagesList = messagesList;\n      newMessagesList[messagesIds.indexOf(m.id)] = _objectSpread(_objectSpread({}, confirmingMessage), {}, {\n        sent: true,\n        own: true\n      });\n      setMessagesList(newMessagesList);\n    } else {\n      var newMsg = _objectSpread(_objectSpread({}, m), {}, {\n        sent: true,\n        own: false\n      });\n      setMessagesList(_objectSpread(_objectSpread({}, messagesList), {}, {\n        newMsg: newMsg\n      }));\n    }\n  });\n  console.log(theme);\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: {\n        margin: 10\n      },\n      value: textMessage,\n      label: \"Enter Message to broadcast!\",\n      onChangeText: setTextMessage,\n      onSubmitEditing: onSubmitTextMessage\n    }), messagesList.sort(function (a, b) {\n      return a.timestamp < b.timestamp;\n    }).map(function (message) {\n      return _jsx(List.Item, {\n        style: {\n          opacity: message.sent ? 1 : 0.5\n        },\n        title: message.fullname,\n        description: message.message,\n        left: function left() {\n          return _jsx(List.Icon, {\n            style: {\n              borderRadius: 100,\n              backgroundColor: message.own ? theme.colors.primary : \"\"\n            },\n            icon: \"message\",\n            color: message.own ? theme.colors.surface : theme.colors.inverseSurface\n          });\n        }\n      }, message.id);\n    })]\n  });\n}","map":{"version":3,"names":["List","Text","TextInput","useContext","useState","v4","uuidv4","AppContext","broadcastTextMessage","onTextMessageReceive","Home","appContext","textMessage","setTextMessage","id","message","fullname","user","clientId","timestamp","Date","getTime","timezoneOffset","getTimezoneOffset","sent","own","messagesList","setMessagesList","theme","themes","current","onSubmitTextMessage","clientName","userId","m","messagesIds","map","a","confirmingMessage","find","undefined","newMessagesList","indexOf","newMsg","console","log","margin","sort","b","opacity","borderRadius","backgroundColor","colors","primary","surface","inverseSurface"],"sources":["E:/_Data/ThomasCattGithub/ChessMultiplayer/frontend/assets/views/Messaging.js"],"sourcesContent":["import { List, Text, TextInput } from 'react-native-paper';\r\nimport { View } from 'react-native';\r\nimport { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { AppContext } from '../scripts/AppContext'\r\nimport { broadcastTextMessage, onTextMessageReceive } from '../scripts/Socket'\r\n\r\nexport default function Home() {\r\n\tconst appContext = useContext(AppContext)\r\n\r\n    const [textMessage, setTextMessage] = useState(\"\")\r\n    const [messagesList, setMessagesList] = useState([\r\n        {\r\n            id: uuidv4(),\r\n            message: 'this is a message. its still sending...',\r\n            fullname: \"You\",\r\n            user: appContext.clientId,\r\n            timestamp: new Date().getTime(),\r\n            timezoneOffset: new Date().getTimezoneOffset(),\r\n            sent: false,\r\n            own: true\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            message: 'this is another message',\r\n            fullname: \"You\",\r\n            user: appContext.clientId,\r\n            timestamp: new Date().getTime() - 10000,\r\n            timezoneOffset: new Date().getTimezoneOffset(),\r\n            sent: true,\r\n            own: true\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            message: 'this is yet another message, but this time its not from me.',\r\n            fullname: \"Joe Biden\",\r\n            user: 'nugget',\r\n            timestamp: new Date().getTime() - 30000,\r\n            timezoneOffset: new Date().getTimezoneOffset(),\r\n            sent: true,\r\n            own: false\r\n        },\r\n    ])\r\n    const theme = appContext.themes.current()\r\n\r\n    const onSubmitTextMessage = () => {\r\n        setTextMessage(\"\")\r\n        broadcastTextMessage({\r\n            id: uuidv4(),\r\n            message: textMessage,\r\n            fullname: appContext.clientName,\r\n            userId: appContext.clientId,\r\n            timestamp: new Date().getTime(),\r\n            timezoneOffset: new Date().getTimezoneOffset()\r\n        })\r\n    }\r\n\r\n    onTextMessageReceive((m) => {\r\n        const messagesIds = messagesList.map(a => a.id)\r\n        const confirmingMessage = messagesIds.find(m.id)\r\n        if ((m.user === appContext.clientId) && (confirmingMessage !== undefined)) {\r\n            let newMessagesList = messagesList\r\n            newMessagesList[messagesIds.indexOf(m.id)] = {...confirmingMessage, sent: true, own: true}\r\n            setMessagesList(newMessagesList)\r\n        } else {\r\n            const newMsg = {...m, sent: true, own: false}\r\n            setMessagesList({...messagesList, newMsg})\r\n        }\r\n    })\r\n\r\n    console.log(theme)\r\n\r\n    return <View>\r\n        <TextInput style={{\r\n            margin: 10,\r\n        }} value={textMessage} label={\"Enter Message to broadcast!\"} onChangeText={setTextMessage} onSubmitEditing={onSubmitTextMessage}/>\r\n        \r\n        {\r\n            messagesList.sort( (a, b) => a.timestamp < b.timestamp).map(message => { return (\r\n                <List.Item\r\n                    style={{opacity: message.sent ? 1 : 0.5}}\r\n                    key={message.id}\r\n                    title={message.fullname}\r\n                    description={message.message}\r\n                    left={() => <List.Icon\r\n                        style={{borderRadius: 100, backgroundColor: message.own ? theme.colors.primary : \"\"}}\r\n                        icon={\"message\"}\r\n                        color={message.own ? theme.colors.surface : theme.colors.inverseSurface} />}\r\n                />\r\n            )})\r\n        }\r\n        \r\n    </View>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}