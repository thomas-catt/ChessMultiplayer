{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\nvar getBorderColor = function getBorderColor(_ref) {\n  var theme = _ref.theme,\n    isOutlined = _ref.isOutlined,\n    disabled = _ref.disabled,\n    selectedColor = _ref.selectedColor,\n    backgroundColor = _ref.backgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n    return theme.colors.outline;\n  }\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n    return color(black).alpha(0.29).rgb().string();\n  }\n  return backgroundColor;\n};\nvar getTextColor = function getTextColor(_ref2) {\n  var theme = _ref2.theme,\n    isOutlined = _ref2.isOutlined,\n    disabled = _ref2.disabled,\n    selectedColor = _ref2.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n    return theme.colors.onSecondaryContainer;\n  }\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\nvar getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n    isOutlined = _ref3.isOutlined;\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n    return theme.colors.secondaryContainer;\n  }\n  if (isOutlined) {\n    var _theme$colors;\n    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;\n  }\n  if (theme.dark) {\n    return '#383838';\n  }\n  return '#ebebeb';\n};\nvar getBackgroundColor = function getBackgroundColor(_ref4) {\n  var theme = _ref4.theme,\n    isOutlined = _ref4.isOutlined,\n    disabled = _ref4.disabled,\n    customBackgroundColor = _ref4.customBackgroundColor;\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n  return getDefaultBackgroundColor({\n    theme: theme,\n    isOutlined: isOutlined\n  });\n};\nvar getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {\n  var theme = _ref5.theme,\n    isOutlined = _ref5.isOutlined,\n    disabled = _ref5.disabled,\n    customBackgroundColor = _ref5.customBackgroundColor,\n    showSelectedOverlay = _ref5.showSelectedOverlay;\n  var backgroundColor = getBackgroundColor({\n    theme: theme,\n    disabled: disabled,\n    isOutlined: isOutlined,\n    customBackgroundColor: customBackgroundColor\n  });\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0.12).rgb().string();\n      }\n      return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0).rgb().string();\n    }\n    if (showSelectedOverlay) {\n      return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.12).rgb().string();\n    }\n    return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0).rgb().string();\n  }\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\nvar getIconColor = function getIconColor(_ref6) {\n  var theme = _ref6.theme,\n    isOutlined = _ref6.isOutlined,\n    disabled = _ref6.disabled,\n    selectedColor = _ref6.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n    return theme.colors.onSecondaryContainer;\n  }\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\nvar getUnderlayColor = function getUnderlayColor(_ref7) {\n  var theme = _ref7.theme,\n    isOutlined = _ref7.isOutlined,\n    disabled = _ref7.disabled,\n    selectedColor = _ref7.selectedColor,\n    selectedBackgroundColor = _ref7.selectedBackgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    selectedColor: selectedColor,\n    isOutlined: isOutlined\n  });\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n  return selectedBackgroundColor;\n};\nexport var getChipColors = function getChipColors(_ref8) {\n  var isOutlined = _ref8.isOutlined,\n    theme = _ref8.theme,\n    selectedColor = _ref8.selectedColor,\n    showSelectedOverlay = _ref8.showSelectedOverlay,\n    customBackgroundColor = _ref8.customBackgroundColor,\n    disabled = _ref8.disabled;\n  var baseChipColorProps = {\n    theme: theme,\n    isOutlined: isOutlined,\n    disabled: disabled\n  };\n  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor\n  }));\n  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor,\n    showSelectedOverlay: showSelectedOverlay\n  }));\n  return {\n    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      backgroundColor: backgroundColor\n    })),\n    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    underlayColor: getUnderlayColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      selectedBackgroundColor: selectedBackgroundColor\n    })),\n    backgroundColor: backgroundColor,\n    selectedBackgroundColor: selectedBackgroundColor\n  };\n};","map":{"version":3,"mappings":"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","names":["color","black","white","getBorderColor","_ref","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","_ref2","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","_ref3","surface","secondaryContainer","_theme$colors","getBackgroundColor","_ref4","customBackgroundColor","getSelectedBackgroundColor","_ref5","showSelectedOverlay","mix","lighten","darken","getIconColor","_ref6","getUnderlayColor","_ref7","selectedBackgroundColor","textColor","fade","getChipColors","_ref8","baseChipColorProps","borderColor","iconColor","underlayColor"],"sources":["helpers.tsx"],"sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ColorValue } from 'react-native';\n\ntype BaseProps = {\n  theme: Theme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}