{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { expo } from \"./app.json\";\nimport App from \"./assets/views/App\";\nimport { AppContext, AppContextProvider } from \"./assets/AppContext\";\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction AppContainer() {\n  var appContext = useContext(AppContext);\n  var darkTheme = appContext.darkTheme,\n    setDarkTheme = appContext.setDarkTheme;\n  var _useState = useState(darkTheme),\n    _useState2 = _slicedToArray(_useState, 2),\n    paperDarkTheme = _useState2[0],\n    setPaperDarkTheme = _useState2[1];\n  function onThemeToggle() {\n    setDarkTheme(!darkTheme);\n    setPaperDarkTheme(!paperDarkTheme);\n  }\n  var theme = appContext.themes.current();\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(App, {\n      theme: theme,\n      darkTheme: darkTheme,\n      changeTheme: onThemeToggle\n    })\n  });\n}\nexport default function Main() {\n  return _jsx(AppContextProvider, {\n    children: _jsx(AppContainer, {})\n  });\n}\nAppRegistry.registerComponent(expo.name, function () {\n  return Main;\n});","map":{"version":3,"names":["useContext","useState","expo","App","AppContext","AppContextProvider","Provider","PaperProvider","AppContainer","appContext","darkTheme","setDarkTheme","paperDarkTheme","setPaperDarkTheme","onThemeToggle","theme","themes","current","Main","AppRegistry","registerComponent","name"],"sources":["/Volumes/DATA/_Data/Thomas Catt/GitHub/ChessMultiplayer/frontend/App.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { AppRegistry } from 'react-native';\nimport { expo } from './app.json';\nimport App from './assets/views/App'\nimport { AppContext, AppContextProvider } from './assets/AppContext'\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nfunction AppContainer() {\n\tconst appContext = useContext(AppContext)\n\tconst { darkTheme, setDarkTheme } = appContext\n\tconst [ paperDarkTheme, setPaperDarkTheme ] = useState(darkTheme)\n\n\tfunction onThemeToggle() {\n\t\tsetDarkTheme(!darkTheme)\n\t\tsetPaperDarkTheme(!paperDarkTheme)\n\t}\n\t\n\tlet theme = appContext.themes.current()\n\treturn <PaperProvider theme={theme}>\n\t\t<App theme={theme} darkTheme={darkTheme} changeTheme={onThemeToggle}/>\n\t</PaperProvider>\n}\n\nexport default function Main() {\n\treturn (\n\t\t<AppContextProvider>\n\t\t\t<AppContainer />\n\t\t</AppContextProvider>\n\t)\n}\n\nAppRegistry.registerComponent(expo.name, () => Main);"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE7C,SAASC,IAAI;AACb,OAAOC,GAAG;AACV,SAASC,UAAU,EAAEC,kBAAkB;AACvC,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAAC;AAE/D,SAASC,YAAY,GAAG;EACvB,IAAMC,UAAU,GAAGT,UAAU,CAACI,UAAU,CAAC;EACzC,IAAQM,SAAS,GAAmBD,UAAU,CAAtCC,SAAS;IAAEC,YAAY,GAAKF,UAAU,CAA3BE,YAAY;EAC/B,gBAA8CV,QAAQ,CAACS,SAAS,CAAC;IAAA;IAAzDE,cAAc;IAAEC,iBAAiB;EAEzC,SAASC,aAAa,GAAG;IACxBH,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBG,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACnC;EAEA,IAAIG,KAAK,GAAGN,UAAU,CAACO,MAAM,CAACC,OAAO,EAAE;EACvC,OAAO,KAAC,aAAa;IAAC,KAAK,EAAEF,KAAM;IAAA,UAClC,KAAC,GAAG;MAAC,KAAK,EAAEA,KAAM;MAAC,SAAS,EAAEL,SAAU;MAAC,WAAW,EAAEI;IAAc;EAAE,EACvD;AACjB;AAEA,eAAe,SAASI,IAAI,GAAG;EAC9B,OACC,KAAC,kBAAkB;IAAA,UAClB,KAAC,YAAY;EAAG,EACI;AAEvB;AAEAC,WAAW,CAACC,iBAAiB,CAAClB,IAAI,CAACmB,IAAI,EAAE;EAAA,OAAMH,IAAI;AAAA,EAAC"},"metadata":{},"sourceType":"module"}