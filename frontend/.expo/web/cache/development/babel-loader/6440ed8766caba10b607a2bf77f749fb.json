{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"accessibilityLabel\", \"right\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DrawerItem = function DrawerItem(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    active = _ref.active,\n    theme = _ref.theme,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    right = _ref.right,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3;\n  var backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : color(theme.colors.primary).alpha(0.12).rgb().string() : 'transparent';\n  var contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.68).rgb().string();\n  var labelMargin = icon ? isV3 ? 12 : 32 : 0;\n  var borderRadius = (isV3 ? 7 : 1) * roundness;\n  var underlayColor = isV3 ? color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.16).rgb().toString() : undefined;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  return React.createElement(View, rest, React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: borderRadius\n    }, isV3 && styles.v3Container, style],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    underlayColor: underlayColor\n  }, React.createElement(View, {\n    style: [styles.wrapper, isV3 && styles.v3Wrapper]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, _objectSpread({\n      color: contentColor,\n      marginLeft: labelMargin\n    }, font)]\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\nDrawerItem.displayName = 'Drawer.Item';\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default withTheme(DrawerItem);","map":{"version":3,"mappings":"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","names":["color","React","Text","Icon","TouchableRipple","withTheme","DrawerItem","_ref","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","roundness","isV3","backgroundColor","colors","secondaryContainer","primary","alpha","rgb","string","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","underlayColor","mix","toString","undefined","font","fonts","labelLarge","medium","View","borderless","delayPressIn","styles","container","v3Container","accessibilityRole","accessibilityState","selected","wrapper","v3Wrapper","content","source","size","variant","selectable","numberOfLines","marginLeft","displayName","StyleSheet","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex"],"sources":["DrawerItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const underlayColor = isV3\n    ? color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.16)\n        .rgb()\n        .toString()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        underlayColor={underlayColor}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"module"}