{"ast":null,"code":"import { io } from 'socket.io-client';\nvar socket = false;\nvar connectSocketIO = function connectSocketIO(_ref) {\n  var onConnect = _ref.onConnect,\n    introduction = _ref.introduction,\n    onFailure = _ref.onFailure,\n    onDisconnect = _ref.onDisconnect;\n  if (!socket) socket = io(\"http://192.168.1.7:4000/\");\n  socket.on('connect', onConnect);\n  socket.emit('introduction', introduction);\n  socket.on('reconnect_failed', onFailure);\n  socket.on('disconnect', onDisconnect);\n};\nvar onUsersCountReceive = function onUsersCountReceive(callback) {\n  socket.on('connected-users', callback);\n};\nexport { connectSocketIO, onUsersCountReceive };","map":{"version":3,"names":["io","socket","connectSocketIO","onConnect","introduction","onFailure","onDisconnect","on","emit","onUsersCountReceive","callback"],"sources":["/Volumes/DATA/_Data/Thomas Catt/GitHub/ChessMultiplayer/frontend/assets/scripts/Socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nlet socket = false\nconst connectSocketIO = ({ onConnect, introduction, onFailure, onDisconnect }) => {\n\tif (!socket) socket = io(\"http://192.168.1.7:4000/\")\n\t\n\tsocket.on('connect', onConnect)\n\tsocket.emit('introduction', introduction)\n\tsocket.on('reconnect_failed', onFailure)\n\tsocket.on('disconnect', onDisconnect)\n\n}\n\nconst onUsersCountReceive = (callback) => {\n\tsocket.on('connected-users', callback)\n}\n\nexport {\n    connectSocketIO,\n    onUsersCountReceive\n}"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAIC,MAAM,GAAG,KAAK;AAClB,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAA6D;EAAA,IAAvDC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;IAAEC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;EAC1E,IAAI,CAACL,MAAM,EAAEA,MAAM,GAAGD,EAAE,CAAC,0BAA0B,CAAC;EAEpDC,MAAM,CAACM,EAAE,CAAC,SAAS,EAAEJ,SAAS,CAAC;EAC/BF,MAAM,CAACO,IAAI,CAAC,cAAc,EAAEJ,YAAY,CAAC;EACzCH,MAAM,CAACM,EAAE,CAAC,kBAAkB,EAAEF,SAAS,CAAC;EACxCJ,MAAM,CAACM,EAAE,CAAC,YAAY,EAAED,YAAY,CAAC;AAEtC,CAAC;AAED,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,QAAQ,EAAK;EACzCT,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAEG,QAAQ,CAAC;AACvC,CAAC;AAED,SACIR,eAAe,EACfO,mBAAmB"},"metadata":{},"sourceType":"module"}