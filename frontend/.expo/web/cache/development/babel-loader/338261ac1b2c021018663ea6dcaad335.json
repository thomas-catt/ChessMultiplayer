{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useOnEvent, useOnMount } from \"./internal/asyncHookWrappers\";\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from \"./internal/devicesWithNotch\";\nimport RNDeviceInfo from \"./internal/nativeInterface\";\nimport { getSupportedPlatformInfoAsync, getSupportedPlatformInfoFunctions, getSupportedPlatformInfoSync } from \"./internal/supported-platform-info\";\nvar _getSupportedPlatform = getSupportedPlatformInfoFunctions({\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getUniqueId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getUniqueIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform2 = _slicedToArray(_getSupportedPlatform, 2),\n  getUniqueId = _getSupportedPlatform2[0],\n  getUniqueIdSync = _getSupportedPlatform2[1];\nexport { getUniqueId, getUniqueIdSync };\nvar uniqueId;\nexport function syncUniqueId() {\n  return _syncUniqueId.apply(this, arguments);\n}\nfunction _syncUniqueId() {\n  _syncUniqueId = _asyncToGenerator(function* () {\n    if (Platform.OS === 'ios') {\n      uniqueId = yield RNDeviceInfo.syncUniqueId();\n    } else {\n      uniqueId = yield getUniqueId();\n    }\n    return uniqueId;\n  });\n  return _syncUniqueId.apply(this, arguments);\n}\nvar _getSupportedPlatform3 = getSupportedPlatformInfoFunctions({\n    memoKey: 'instanceId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstanceId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstanceIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform4 = _slicedToArray(_getSupportedPlatform3, 2),\n  getInstanceId = _getSupportedPlatform4[0],\n  getInstanceIdSync = _getSupportedPlatform4[1];\nexport { getInstanceId, getInstanceIdSync };\nvar _getSupportedPlatform5 = getSupportedPlatformInfoFunctions({\n    memoKey: 'serialNumber',\n    supportedPlatforms: ['android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getSerialNumber();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSerialNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform6 = _slicedToArray(_getSupportedPlatform5, 2),\n  getSerialNumber = _getSupportedPlatform6[0],\n  getSerialNumberSync = _getSupportedPlatform6[1];\nexport { getSerialNumber, getSerialNumberSync };\nvar _getSupportedPlatform7 = getSupportedPlatformInfoFunctions({\n    memoKey: 'androidId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getAndroidId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getAndroidIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform8 = _slicedToArray(_getSupportedPlatform7, 2),\n  getAndroidId = _getSupportedPlatform8[0],\n  getAndroidIdSync = _getSupportedPlatform8[1];\nexport { getAndroidId, getAndroidIdSync };\nvar _getSupportedPlatform9 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getIpAddress();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getIpAddressSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform10 = _slicedToArray(_getSupportedPlatform9, 2),\n  getIpAddress = _getSupportedPlatform10[0],\n  getIpAddressSync = _getSupportedPlatform10[1];\nexport { getIpAddress, getIpAddressSync };\nvar _getSupportedPlatform11 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isCameraPresent();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isCameraPresentSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform12 = _slicedToArray(_getSupportedPlatform11, 2),\n  isCameraPresent = _getSupportedPlatform12[0],\n  isCameraPresentSync = _getSupportedPlatform12[1];\nexport { isCameraPresent, isCameraPresentSync };\nexport function getMacAddress() {\n  return _getMacAddress.apply(this, arguments);\n}\nfunction _getMacAddress() {\n  _getMacAddress = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getMacAddress();\n    } else if (Platform.OS === 'ios') {\n      return '02:00:00:00:00:00';\n    }\n    return 'unknown';\n  });\n  return _getMacAddress.apply(this, arguments);\n}\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\nexport var getDeviceId = function getDeviceId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: function getter() {\n      return RNDeviceInfo.deviceId;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nvar _getSupportedPlatform13 = getSupportedPlatformInfoFunctions({\n    memoKey: 'manufacturer',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer();\n    },\n    syncGetter: function syncGetter() {\n      return Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform14 = _slicedToArray(_getSupportedPlatform13, 2),\n  getManufacturer = _getSupportedPlatform14[0],\n  getManufacturerSync = _getSupportedPlatform14[1];\nexport { getManufacturer, getManufacturerSync };\nexport var getModel = function getModel() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.model;\n    }\n  });\n};\nexport var getBrand = function getBrand() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.brand;\n    }\n  });\n};\nexport var getSystemName = function getSystemName() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: function getter() {\n      return Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown'\n      });\n    }\n  });\n};\nexport var getSystemVersion = function getSystemVersion() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.systemVersion;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion'\n  });\n};\nvar _getSupportedPlatform15 = getSupportedPlatformInfoFunctions({\n    memoKey: 'buildId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getBuildId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBuildIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform16 = _slicedToArray(_getSupportedPlatform15, 2),\n  getBuildId = _getSupportedPlatform16[0],\n  getBuildIdSync = _getSupportedPlatform16[1];\nexport { getBuildId, getBuildIdSync };\nvar _getSupportedPlatform17 = getSupportedPlatformInfoFunctions({\n    memoKey: 'apiLevel',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getApiLevel();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getApiLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform18 = _slicedToArray(_getSupportedPlatform17, 2),\n  getApiLevel = _getSupportedPlatform18[0],\n  getApiLevelSync = _getSupportedPlatform18[1];\nexport { getApiLevel, getApiLevelSync };\nexport var getBundleId = function getBundleId() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.bundleId;\n    }\n  });\n};\nvar _getSupportedPlatform19 = getSupportedPlatformInfoFunctions({\n    memoKey: 'installerPackageName',\n    supportedPlatforms: ['android', 'windows', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstallerPackageName();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstallerPackageNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform20 = _slicedToArray(_getSupportedPlatform19, 2),\n  getInstallerPackageName = _getSupportedPlatform20[0],\n  getInstallerPackageNameSync = _getSupportedPlatform20[1];\nexport { getInstallerPackageName, getInstallerPackageNameSync };\nexport var getApplicationName = function getApplicationName() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.appName;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexport var getBuildNumber = function getBuildNumber() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.buildNumber;\n    },\n    defaultValue: 'unknown'\n  });\n};\nexport var getVersion = function getVersion() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.appVersion;\n    }\n  });\n};\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\nvar _getSupportedPlatform21 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getDeviceName();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDeviceNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform22 = _slicedToArray(_getSupportedPlatform21, 2),\n  getDeviceName = _getSupportedPlatform22[0],\n  getDeviceNameSync = _getSupportedPlatform22[1];\nexport { getDeviceName, getDeviceNameSync };\nvar _getSupportedPlatform23 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUsedMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getUsedMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform24 = _slicedToArray(_getSupportedPlatform23, 2),\n  getUsedMemory = _getSupportedPlatform24[0],\n  getUsedMemorySync = _getSupportedPlatform24[1];\nexport { getUsedMemory, getUsedMemorySync };\nexport var getUserAgent = function getUserAgent() {\n  return getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgent();\n    }\n  });\n};\nexport var getUserAgentSync = function getUserAgentSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgentSync();\n    }\n  });\n};\nvar _getSupportedPlatform25 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getFontScale();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFontScaleSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform26 = _slicedToArray(_getSupportedPlatform25, 2),\n  getFontScale = _getSupportedPlatform26[0],\n  getFontScaleSync = _getSupportedPlatform26[1];\nexport { getFontScale, getFontScaleSync };\nvar _getSupportedPlatform27 = getSupportedPlatformInfoFunctions({\n    memoKey: 'bootloader',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getBootloader();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBootloaderSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform28 = _slicedToArray(_getSupportedPlatform27, 2),\n  getBootloader = _getSupportedPlatform28[0],\n  getBootloaderSync = _getSupportedPlatform28[1];\nexport { getBootloader, getBootloaderSync };\nvar _getSupportedPlatform29 = getSupportedPlatformInfoFunctions({\n    getter: function getter() {\n      return RNDeviceInfo.getDevice();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDeviceSync();\n    },\n    defaultValue: 'unknown',\n    memoKey: 'device',\n    supportedPlatforms: ['android']\n  }),\n  _getSupportedPlatform30 = _slicedToArray(_getSupportedPlatform29, 2),\n  getDevice = _getSupportedPlatform30[0],\n  getDeviceSync = _getSupportedPlatform30[1];\nexport { getDevice, getDeviceSync };\nvar _getSupportedPlatform31 = getSupportedPlatformInfoFunctions({\n    memoKey: 'display',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getDisplay();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDisplaySync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform32 = _slicedToArray(_getSupportedPlatform31, 2),\n  getDisplay = _getSupportedPlatform32[0],\n  getDisplaySync = _getSupportedPlatform32[1];\nexport { getDisplay, getDisplaySync };\nvar _getSupportedPlatform33 = getSupportedPlatformInfoFunctions({\n    memoKey: 'fingerprint',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getFingerprint();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFingerprintSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform34 = _slicedToArray(_getSupportedPlatform33, 2),\n  getFingerprint = _getSupportedPlatform34[0],\n  getFingerprintSync = _getSupportedPlatform34[1];\nexport { getFingerprint, getFingerprintSync };\nvar _getSupportedPlatform35 = getSupportedPlatformInfoFunctions({\n    memoKey: 'hardware',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getHardware();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getHardwareSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform36 = _slicedToArray(_getSupportedPlatform35, 2),\n  getHardware = _getSupportedPlatform36[0],\n  getHardwareSync = _getSupportedPlatform36[1];\nexport { getHardware, getHardwareSync };\nvar _getSupportedPlatform37 = getSupportedPlatformInfoFunctions({\n    memoKey: 'host',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getHost();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getHostSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform38 = _slicedToArray(_getSupportedPlatform37, 2),\n  getHost = _getSupportedPlatform38[0],\n  getHostSync = _getSupportedPlatform38[1];\nexport { getHost, getHostSync };\nvar _getSupportedPlatform39 = getSupportedPlatformInfoFunctions({\n    memoKey: 'product',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getProduct();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getProductSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform40 = _slicedToArray(_getSupportedPlatform39, 2),\n  getProduct = _getSupportedPlatform40[0],\n  getProductSync = _getSupportedPlatform40[1];\nexport { getProduct, getProductSync };\nvar _getSupportedPlatform41 = getSupportedPlatformInfoFunctions({\n    memoKey: 'tags',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getTags();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTagsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform42 = _slicedToArray(_getSupportedPlatform41, 2),\n  getTags = _getSupportedPlatform42[0],\n  getTagsSync = _getSupportedPlatform42[1];\nexport { getTags, getTagsSync };\nvar _getSupportedPlatform43 = getSupportedPlatformInfoFunctions({\n    memoKey: 'type',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getType();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTypeSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform44 = _slicedToArray(_getSupportedPlatform43, 2),\n  getType = _getSupportedPlatform44[0],\n  getTypeSync = _getSupportedPlatform44[1];\nexport { getType, getTypeSync };\nvar _getSupportedPlatform45 = getSupportedPlatformInfoFunctions({\n    memoKey: 'baseOs',\n    supportedPlatforms: ['android', 'web', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getBaseOs();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBaseOsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform46 = _slicedToArray(_getSupportedPlatform45, 2),\n  getBaseOs = _getSupportedPlatform46[0],\n  getBaseOsSync = _getSupportedPlatform46[1];\nexport { getBaseOs, getBaseOsSync };\nvar _getSupportedPlatform47 = getSupportedPlatformInfoFunctions({\n    memoKey: 'previewSdkInt',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getPreviewSdkInt();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPreviewSdkIntSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform48 = _slicedToArray(_getSupportedPlatform47, 2),\n  getPreviewSdkInt = _getSupportedPlatform48[0],\n  getPreviewSdkIntSync = _getSupportedPlatform48[1];\nexport { getPreviewSdkInt, getPreviewSdkIntSync };\nvar _getSupportedPlatform49 = getSupportedPlatformInfoFunctions({\n    memoKey: 'securityPatch',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSecurityPatch();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSecurityPatchSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform50 = _slicedToArray(_getSupportedPlatform49, 2),\n  getSecurityPatch = _getSupportedPlatform50[0],\n  getSecurityPatchSync = _getSupportedPlatform50[1];\nexport { getSecurityPatch, getSecurityPatchSync };\nvar _getSupportedPlatform51 = getSupportedPlatformInfoFunctions({\n    memoKey: 'codeName',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getCodename();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getCodenameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform52 = _slicedToArray(_getSupportedPlatform51, 2),\n  getCodename = _getSupportedPlatform52[0],\n  getCodenameSync = _getSupportedPlatform52[1];\nexport { getCodename, getCodenameSync };\nvar _getSupportedPlatform53 = getSupportedPlatformInfoFunctions({\n    memoKey: 'incremental',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getIncremental();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getIncrementalSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform54 = _slicedToArray(_getSupportedPlatform53, 2),\n  getIncremental = _getSupportedPlatform54[0],\n  getIncrementalSync = _getSupportedPlatform54[1];\nexport { getIncremental, getIncrementalSync };\nvar _getSupportedPlatform55 = getSupportedPlatformInfoFunctions({\n    memoKey: 'emulator',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isEmulator();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isEmulatorSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform56 = _slicedToArray(_getSupportedPlatform55, 2),\n  isEmulator = _getSupportedPlatform56[0],\n  isEmulatorSync = _getSupportedPlatform56[1];\nexport { isEmulator, isEmulatorSync };\nexport var isTablet = function isTablet() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: function getter() {\n      return RNDeviceInfo.isTablet;\n    }\n  });\n};\nvar _getSupportedPlatform57 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isPinOrFingerprintSet();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isPinOrFingerprintSetSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform58 = _slicedToArray(_getSupportedPlatform57, 2),\n  isPinOrFingerprintSet = _getSupportedPlatform58[0],\n  isPinOrFingerprintSetSync = _getSupportedPlatform58[1];\nexport { isPinOrFingerprintSet, isPinOrFingerprintSetSync };\nvar notch;\nexport function hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    notch = devicesWithNotch.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return notch;\n}\nvar dynamicIsland;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    dynamicIsland = devicesWithDynamicIsland.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return dynamicIsland;\n}\nvar _getSupportedPlatform59 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.hasGms();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.hasGmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform60 = _slicedToArray(_getSupportedPlatform59, 2),\n  hasGms = _getSupportedPlatform60[0],\n  hasGmsSync = _getSupportedPlatform60[1];\nexport { hasGms, hasGmsSync };\nvar _getSupportedPlatform61 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.hasHms();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.hasHmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform62 = _slicedToArray(_getSupportedPlatform61, 2),\n  hasHms = _getSupportedPlatform62[0],\n  hasHmsSync = _getSupportedPlatform62[1];\nexport { hasHms, hasHmsSync };\nvar _getSupportedPlatform63 = getSupportedPlatformInfoFunctions({\n    memoKey: 'firstInstallTime',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getFirstInstallTime();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFirstInstallTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform64 = _slicedToArray(_getSupportedPlatform63, 2),\n  getFirstInstallTime = _getSupportedPlatform64[0],\n  getFirstInstallTimeSync = _getSupportedPlatform64[1];\nexport { getFirstInstallTime, getFirstInstallTimeSync };\nvar _getSupportedPlatform65 = getSupportedPlatformInfoFunctions({\n    memoKey: 'installReferrer',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstallReferrer();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstallReferrerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform66 = _slicedToArray(_getSupportedPlatform65, 2),\n  getInstallReferrer = _getSupportedPlatform66[0],\n  getInstallReferrerSync = _getSupportedPlatform66[1];\nexport { getInstallReferrer, getInstallReferrerSync };\nvar _getSupportedPlatform67 = getSupportedPlatformInfoFunctions({\n    memoKey: 'lastUpdateTime',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getLastUpdateTime();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getLastUpdateTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform68 = _slicedToArray(_getSupportedPlatform67, 2),\n  getLastUpdateTime = _getSupportedPlatform68[0],\n  getLastUpdateTimeSync = _getSupportedPlatform68[1];\nexport { getLastUpdateTime, getLastUpdateTimeSync };\nvar _getSupportedPlatform69 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getPhoneNumber();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPhoneNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform70 = _slicedToArray(_getSupportedPlatform69, 2),\n  getPhoneNumber = _getSupportedPlatform70[0],\n  getPhoneNumberSync = _getSupportedPlatform70[1];\nexport { getPhoneNumber, getPhoneNumberSync };\nvar _getSupportedPlatform71 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getCarrier();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getCarrierSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform72 = _slicedToArray(_getSupportedPlatform71, 2),\n  getCarrier = _getSupportedPlatform72[0],\n  getCarrierSync = _getSupportedPlatform72[1];\nexport { getCarrier, getCarrierSync };\nvar _getSupportedPlatform73 = getSupportedPlatformInfoFunctions({\n    memoKey: 'totalMemory',\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getTotalMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTotalMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform74 = _slicedToArray(_getSupportedPlatform73, 2),\n  getTotalMemory = _getSupportedPlatform74[0],\n  getTotalMemorySync = _getSupportedPlatform74[1];\nexport { getTotalMemory, getTotalMemorySync };\nvar _getSupportedPlatform75 = getSupportedPlatformInfoFunctions({\n    memoKey: 'maxMemory',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getMaxMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getMaxMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform76 = _slicedToArray(_getSupportedPlatform75, 2),\n  getMaxMemory = _getSupportedPlatform76[0],\n  getMaxMemorySync = _getSupportedPlatform76[1];\nexport { getMaxMemory, getMaxMemorySync };\nvar _getSupportedPlatform77 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getTotalDiskCapacity();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTotalDiskCapacitySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform78 = _slicedToArray(_getSupportedPlatform77, 2),\n  getTotalDiskCapacity = _getSupportedPlatform78[0],\n  getTotalDiskCapacitySync = _getSupportedPlatform78[1];\nexport { getTotalDiskCapacity, getTotalDiskCapacitySync };\nexport function getTotalDiskCapacityOld() {\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nfunction _getTotalDiskCapacityOld() {\n  _getTotalDiskCapacityOld = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getTotalDiskCapacityOld();\n    }\n    if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      return getTotalDiskCapacity();\n    }\n    return -1;\n  });\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform79 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getFreeDiskStorage();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFreeDiskStorageSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform80 = _slicedToArray(_getSupportedPlatform79, 2),\n  getFreeDiskStorage = _getSupportedPlatform80[0],\n  getFreeDiskStorageSync = _getSupportedPlatform80[1];\nexport { getFreeDiskStorage, getFreeDiskStorageSync };\nexport function getFreeDiskStorageOld() {\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nfunction _getFreeDiskStorageOld() {\n  _getFreeDiskStorageOld = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getFreeDiskStorageOld();\n    }\n    if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      return getFreeDiskStorage();\n    }\n    return -1;\n  });\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform81 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getBatteryLevel();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBatteryLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform82 = _slicedToArray(_getSupportedPlatform81, 2),\n  getBatteryLevel = _getSupportedPlatform82[0],\n  getBatteryLevelSync = _getSupportedPlatform82[1];\nexport { getBatteryLevel, getBatteryLevelSync };\nvar _getSupportedPlatform83 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getPowerState();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPowerStateSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform84 = _slicedToArray(_getSupportedPlatform83, 2),\n  getPowerState = _getSupportedPlatform84[0],\n  getPowerStateSync = _getSupportedPlatform84[1];\nexport { getPowerState, getPowerStateSync };\nvar _getSupportedPlatform85 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isBatteryCharging();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isBatteryChargingSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform86 = _slicedToArray(_getSupportedPlatform85, 2),\n  isBatteryCharging = _getSupportedPlatform86[0],\n  isBatteryChargingSync = _getSupportedPlatform86[1];\nexport { isBatteryCharging, isBatteryChargingSync };\nexport function isLandscape() {\n  return _isLandscape.apply(this, arguments);\n}\nfunction _isLandscape() {\n  _isLandscape = _asyncToGenerator(function* () {\n    return Promise.resolve(isLandscapeSync());\n  });\n  return _isLandscape.apply(this, arguments);\n}\nexport function isLandscapeSync() {\n  var _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n  return width >= height;\n}\nvar _getSupportedPlatform87 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isAirplaneMode();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isAirplaneModeSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform88 = _slicedToArray(_getSupportedPlatform87, 2),\n  isAirplaneMode = _getSupportedPlatform88[0],\n  isAirplaneModeSync = _getSupportedPlatform88[1];\nexport { isAirplaneMode, isAirplaneModeSync };\nexport var getDeviceType = function getDeviceType() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nexport var getDeviceTypeSync = function getDeviceTypeSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nvar _getSupportedPlatform89 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supportedAbis',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupportedAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupportedAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform90 = _slicedToArray(_getSupportedPlatform89, 2),\n  supportedAbis = _getSupportedPlatform90[0],\n  supportedAbisSync = _getSupportedPlatform90[1];\nexport { supportedAbis, supportedAbisSync };\nvar _getSupportedPlatform91 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supported32BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupported32BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupported32BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform92 = _slicedToArray(_getSupportedPlatform91, 2),\n  supported32BitAbis = _getSupportedPlatform92[0],\n  supported32BitAbisSync = _getSupportedPlatform92[1];\nexport { supported32BitAbis, supported32BitAbisSync };\nvar _getSupportedPlatform93 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supported64BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupported64BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupported64BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform94 = _slicedToArray(_getSupportedPlatform93, 2),\n  supported64BitAbis = _getSupportedPlatform94[0],\n  supported64BitAbisSync = _getSupportedPlatform94[1];\nexport { supported64BitAbis, supported64BitAbisSync };\nexport function hasSystemFeature(_x) {\n  return _hasSystemFeature.apply(this, arguments);\n}\nfunction _hasSystemFeature() {\n  _hasSystemFeature = _asyncToGenerator(function* (feature) {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.hasSystemFeature(feature);\n    }\n    return false;\n  });\n  return _hasSystemFeature.apply(this, arguments);\n}\nexport function hasSystemFeatureSync(feature) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\nexport function isLowBatteryLevel(level) {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\nvar _getSupportedPlatform95 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSystemAvailableFeatures();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSystemAvailableFeaturesSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform96 = _slicedToArray(_getSupportedPlatform95, 2),\n  getSystemAvailableFeatures = _getSupportedPlatform96[0],\n  getSystemAvailableFeaturesSync = _getSupportedPlatform96[1];\nexport { getSystemAvailableFeatures, getSystemAvailableFeaturesSync };\nvar _getSupportedPlatform97 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isLocationEnabled();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isLocationEnabledSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform98 = _slicedToArray(_getSupportedPlatform97, 2),\n  isLocationEnabled = _getSupportedPlatform98[0],\n  isLocationEnabledSync = _getSupportedPlatform98[1];\nexport { isLocationEnabled, isLocationEnabledSync };\nvar _getSupportedPlatform99 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.isHeadphonesConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isHeadphonesConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform100 = _slicedToArray(_getSupportedPlatform99, 2),\n  isHeadphonesConnected = _getSupportedPlatform100[0],\n  isHeadphonesConnectedSync = _getSupportedPlatform100[1];\nexport { isHeadphonesConnected, isHeadphonesConnectedSync };\nvar _getSupportedPlatform101 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isMouseConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isMouseConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform102 = _slicedToArray(_getSupportedPlatform101, 2),\n  isMouseConnected = _getSupportedPlatform102[0],\n  isMouseConnectedSync = _getSupportedPlatform102[1];\nexport { isMouseConnected, isMouseConnectedSync };\nvar _getSupportedPlatform103 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isKeyboardConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isKeyboardConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform104 = _slicedToArray(_getSupportedPlatform103, 2),\n  isKeyboardConnected = _getSupportedPlatform104[0],\n  isKeyboardConnectedSync = _getSupportedPlatform104[1];\nexport { isKeyboardConnected, isKeyboardConnectedSync };\nexport var isTabletMode = function isTabletMode() {\n  return getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isTabletMode();\n    },\n    defaultValue: false\n  });\n};\nvar _getSupportedPlatform105 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getAvailableLocationProviders();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getAvailableLocationProvidersSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform106 = _slicedToArray(_getSupportedPlatform105, 2),\n  getAvailableLocationProviders = _getSupportedPlatform106[0],\n  getAvailableLocationProvidersSync = _getSupportedPlatform106[1];\nexport { getAvailableLocationProviders, getAvailableLocationProvidersSync };\nvar _getSupportedPlatform107 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getBrightness();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBrightnessSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform108 = _slicedToArray(_getSupportedPlatform107, 2),\n  getBrightness = _getSupportedPlatform108[0],\n  getBrightnessSync = _getSupportedPlatform108[1];\nexport { getBrightness, getBrightnessSync };\nexport function getDeviceToken() {\n  return _getDeviceToken.apply(this, arguments);\n}\nfunction _getDeviceToken() {\n  _getDeviceToken = _asyncToGenerator(function* () {\n    if (Platform.OS === 'ios') {\n      return RNDeviceInfo.getDeviceToken();\n    }\n    return 'unknown';\n  });\n  return _getDeviceToken.apply(this, arguments);\n}\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    batteryLevel = _useState2[0],\n    setBatteryLevel = _useState2[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var initialValue = yield getBatteryLevel();\n        setBatteryLevel(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nexport function useBatteryLevelIsLow() {\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    batteryLevelIsLow = _useState4[0],\n    setBatteryLevelIsLow = _useState4[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var initialValue = yield getBatteryLevel();\n        isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    setInitialValue();\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nexport function usePowerState() {\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    powerState = _useState6[0],\n    setPowerState = _useState6[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var initialValue = yield getPowerState();\n        setPowerState(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nexport function useIsHeadphonesConnected() {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\nexport function useFirstInstallTime() {\n  return useOnMount(getFirstInstallTime, -1);\n}\nexport function useDeviceName() {\n  return useOnMount(getDeviceName, 'unknown');\n}\nexport function useHasSystemFeature(feature) {\n  var asyncGetter = useCallback(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return useOnMount(asyncGetter, false);\n}\nexport function useIsEmulator() {\n  return useOnMount(isEmulator, false);\n}\nexport function useManufacturer() {\n  return useOnMount(getManufacturer, 'unknown');\n}\nexport function useBrightness() {\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    brightness = _useState8[0],\n    setBrightness = _useState8[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        var initialValue = yield getBrightness();\n        setBrightness(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(value) {\n      setBrightness(value);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_brightnessDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return brightness;\n}\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageOld: getFreeDiskStorageOld,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync: getFreeDiskStorageOldSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacityOld: getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync: getTotalDiskCapacityOldSync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUniqueIdSync: getUniqueIdSync,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  getBrightness: getBrightness,\n  getBrightnessSync: getBrightnessSync,\n  hasGms: hasGms,\n  hasGmsSync: hasGmsSync,\n  hasHms: hasHms,\n  hasHmsSync: hasHmsSync,\n  hasNotch: hasNotch,\n  hasDynamicIsland: hasDynamicIsland,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isMouseConnected: isMouseConnected,\n  isMouseConnectedSync: isMouseConnectedSync,\n  isKeyboardConnected: isKeyboardConnected,\n  isKeyboardConnectedSync: isKeyboardConnectedSync,\n  isTabletMode: isTabletMode,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState,\n  useManufacturer: useManufacturer,\n  useIsHeadphonesConnected: useIsHeadphonesConnected,\n  useBrightness: useBrightness\n};\nexport default deviceInfoModule;","map":{"version":3,"mappings":"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","names":["useCallback","useEffect","useState","useOnEvent","useOnMount","devicesWithDynamicIsland","devicesWithNotch","RNDeviceInfo","getSupportedPlatformInfoAsync","getSupportedPlatformInfoFunctions","getSupportedPlatformInfoSync","memoKey","supportedPlatforms","getter","getUniqueId","syncGetter","getUniqueIdSync","defaultValue","uniqueId","syncUniqueId","Platform","OS","getInstanceId","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getManufacturer","getManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","undefined","_brand","_model","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","Dimensions","get","height","width","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","getSupportedAbis","getSupportedAbisSync","supportedAbis","supportedAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","supported64BitAbis","supported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","NativeEventEmitter","NativeModules","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","deviceInfoModule"],"sources":["index.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default deviceInfoModule;\n"]},"metadata":{},"sourceType":"module"}