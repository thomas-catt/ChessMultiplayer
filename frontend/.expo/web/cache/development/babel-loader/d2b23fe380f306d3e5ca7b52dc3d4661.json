{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from \"../../core/theming\";\n\nvar DialogActions = function DialogActions(props) {\n  var _useTheme = useTheme(),\n    isV3 = _useTheme.isV3;\n  var actionsLength = React.Children.toArray(props.children).length;\n  return React.createElement(View, _extends({}, props, {\n    style: [isV3 ? styles.v3Container : styles.container, props.style]\n  }), React.Children.map(props.children, function (child, i) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: true,\n      uppercase: !isV3,\n      style: isV3 && {\n        paddingRight: i + 1 === actionsLength ? 0 : 8\n      }\n    }) : child;\n  }));\n};\nDialogActions.displayName = 'Dialog.Actions';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24\n  }\n});\nexport default DialogActions;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAEA,SAASC,QAAT;;AA4CA,IAAMC,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,KAAD,EAAkB;EACtC,gBAAiBF,QAAQ,EAAzB;IAAQG;EACR,IAAMC,aAAa,GAAGL,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBJ,KAAK,CAACK,QAA7B,EAAuCC,MAA7D;EAEA,OACET,oBAACU,IAAD,eACMP,KADN;IAEEQ,KAAK,EAAE,CAACP,IAAI,GAAGQ,MAAM,CAACC,WAAV,GAAwBD,MAAM,CAACE,SAApC,EAA+CX,KAAK,CAACQ,KAArD;EAFT,IAIGX,KAAK,CAACM,QAAN,CAAeS,GAAf,CAAmBZ,KAAK,CAACK,QAAzB,EAAmC,UAACQ,KAAD,EAAQC,CAAR;IAAA,OAClCjB,KAAK,CAACkB,cAAN,CAAqBF,KAArB,IACIhB,KAAK,CAACmB,YAAN,CAAmBH,KAAnB,EAA0B;MACxBI,OAAO,EAAE,IADe;MAExBC,SAAS,EAAE,CAACjB,IAFY;MAGxBO,KAAK,EAAEP,IAAI,IAAI;QACbkB,YAAY,EAAEL,CAAC,GAAG,CAAJ,KAAUZ,aAAV,GAA0B,CAA1B,GAA8B;MAD/B;IAHS,CAA1B,CADJ,GAQIW,KATL;EAAA,EAJH,CADF;AAkBD,CAtBD;AAwBAd,aAAa,CAACqB,WAAd,GAA4B,gBAA5B;AAEA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BX,SAAS,EAAE;IACTY,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,UAHP;IAITC,OAAO,EAAE;EAJA,CADoB;EAO/BhB,WAAW,EAAE;IACXa,aAAa,EAAE,KADJ;IAEXI,QAAQ,EAAE,CAFC;IAGXH,UAAU,EAAE,QAHD;IAIXC,cAAc,EAAE,UAJL;IAKXG,aAAa,EAAE,EALJ;IAMXC,iBAAiB,EAAE;EANR;AAPkB,CAAlB,CAAf;AAiBA,eAAe9B,aAAf","names":["React","useTheme","DialogActions","props","isV3","actionsLength","Children","toArray","children","length","View","style","styles","v3Container","container","map","child","i","isValidElement","cloneElement","compact","uppercase","paddingRight","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","flexGrow","paddingBottom","paddingHorizontal"],"sources":["DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { useTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n  const { isV3 } = useTheme();\n  const actionsLength = React.Children.toArray(props.children).length;\n\n  return (\n    <View\n      {...props}\n      style={[isV3 ? styles.v3Container : styles.container, props.style]}\n    >\n      {React.Children.map(props.children, (child, i) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child, {\n              compact: true,\n              uppercase: !isV3,\n              style: isV3 && {\n                paddingRight: i + 1 === actionsLength ? 0 : 8,\n              },\n            })\n          : child\n      )}\n    </View>\n  );\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"module"}