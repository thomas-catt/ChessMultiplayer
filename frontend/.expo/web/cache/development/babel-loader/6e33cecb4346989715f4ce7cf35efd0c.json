{"ast":null,"code":"import color from 'color';\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n    customColor = _ref.customColor;\n  if (customColor) {\n    return customColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n    customUncheckedColor = _ref2.customUncheckedColor;\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n    checkedColor = _ref3.checkedColor,\n    disabled = _ref3.disabled;\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n    checked = _ref4.checked,\n    disabled = _ref4.disabled,\n    checkedColor = _ref4.checkedColor,\n    uncheckedColor = _ref4.uncheckedColor;\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\nexport var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n    disabled = _ref5.disabled,\n    checked = _ref5.checked,\n    customColor = _ref5.customColor,\n    customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n    disabled = _ref6.disabled,\n    customColor = _ref6.customColor;\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n  if (customColor) {\n    return customColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n    checkedColor = _ref7.checkedColor,\n    disabled = _ref7.disabled;\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\nexport var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n    disabled = _ref8.disabled,\n    customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};","map":{"version":3,"mappings":"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","names":["color","getAndroidCheckedColor","_ref","theme","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","_ref2","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","_ref3","checkedColor","disabled","onSurface","fade","getAndroidControlColor","_ref4","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","_ref5","rippleColor","selectionControlColor","getIOSCheckedColor","_ref6","getIOSRippleColor","_ref7","getSelectionControlIOSColor","_ref8"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}