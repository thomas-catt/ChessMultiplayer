{"ast":null,"code":"import { io } from 'socket.io-client';\nvar socketUrl = \"http://192.168.1.69:4000/\";\nvar socket = false;\nvar connectSocketIO = function connectSocketIO(_ref) {\n  var onConnect = _ref.onConnect,\n    introduction = _ref.introduction,\n    onFailure = _ref.onFailure,\n    onDisconnect = _ref.onDisconnect;\n  if (!socket) {\n    socket = io(socketUrl);\n    socket.emit('introduction', introduction);\n  }\n  socket.on('connect', onConnect);\n  socket.on('reconnect_failed', onFailure);\n  socket.on('disconnect', onDisconnect);\n};\nvar onUsersCountReceive = function onUsersCountReceive(callback) {\n  socket.on('connected-users', callback);\n};\nvar broadcastTextMessage = function broadcastTextMessage(textMessage) {\n  console.log(\"SENDING MESSAGE:\", textMessage);\n};\nvar onTextMessageReceive = function onTextMessageReceive(callback) {\n  socket.on('text-message', callback);\n};\nexport { socket, connectSocketIO, onUsersCountReceive, broadcastTextMessage, onTextMessageReceive };","map":{"version":3,"names":["io","socketUrl","socket","connectSocketIO","onConnect","introduction","onFailure","onDisconnect","emit","on","onUsersCountReceive","callback","broadcastTextMessage","textMessage","console","log","onTextMessageReceive"],"sources":["E:/_Data/ThomasCattGithub/ChessMultiplayer/frontend/assets/scripts/Socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\nconst socketUrl = \"http://192.168.1.69:4000/\"\r\n\r\nlet socket = false\r\nconst connectSocketIO = ({ onConnect, introduction, onFailure, onDisconnect }) => {\r\n\tif (!socket) {\r\n        socket = io(socketUrl)\r\n        socket.emit('introduction', introduction)\r\n    }\r\n\t\r\n\tsocket.on('connect', onConnect)\r\n\tsocket.on('reconnect_failed', onFailure)\r\n\tsocket.on('disconnect', onDisconnect)\r\n\r\n}\r\n\r\nconst onUsersCountReceive = (callback) => {\r\n\tsocket.on('connected-users', callback)\r\n}\r\n\r\nconst broadcastTextMessage = (textMessage) => {\r\n    console.log(\"SENDING MESSAGE:\", textMessage)\r\n}\r\n\r\nconst onTextMessageReceive = (callback) => {\r\n\tsocket.on('text-message', callback)\r\n}\r\n\r\n\r\n\r\nexport {\r\n    socket,\r\n    connectSocketIO,\r\n    onUsersCountReceive,\r\n    broadcastTextMessage,\r\n    onTextMessageReceive\r\n}"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AACrC,IAAMC,SAAS,GAAG,2BAA2B;AAE7C,IAAIC,MAAM,GAAG,KAAK;AAClB,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAA6D;EAAA,IAAvDC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;IAAEC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;EAC1E,IAAI,CAACL,MAAM,EAAE;IACNA,MAAM,GAAGF,EAAE,CAACC,SAAS,CAAC;IACtBC,MAAM,CAACM,IAAI,CAAC,cAAc,EAAEH,YAAY,CAAC;EAC7C;EAEHH,MAAM,CAACO,EAAE,CAAC,SAAS,EAAEL,SAAS,CAAC;EAC/BF,MAAM,CAACO,EAAE,CAAC,kBAAkB,EAAEH,SAAS,CAAC;EACxCJ,MAAM,CAACO,EAAE,CAAC,YAAY,EAAEF,YAAY,CAAC;AAEtC,CAAC;AAED,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,QAAQ,EAAK;EACzCT,MAAM,CAACO,EAAE,CAAC,iBAAiB,EAAEE,QAAQ,CAAC;AACvC,CAAC;AAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,WAAW,EAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,WAAW,CAAC;AAChD,CAAC;AAED,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIL,QAAQ,EAAK;EAC1CT,MAAM,CAACO,EAAE,CAAC,cAAc,EAAEE,QAAQ,CAAC;AACpC,CAAC;AAID,SACIT,MAAM,EACNC,eAAe,EACfO,mBAAmB,EACnBE,oBAAoB,EACpBI,oBAAoB"},"metadata":{},"sourceType":"module"}