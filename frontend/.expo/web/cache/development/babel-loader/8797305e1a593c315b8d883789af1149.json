{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useContext, useState } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { MD3LightTheme, MD3DarkTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { expo } from \"./app.json\";\nimport { AppContext, AppContextProvider } from \"./assets/AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar materialLightTheme = _objectSpread(_objectSpread({}, MD3LightTheme), {}, {\n  mode: \"adaptive\",\n  colors: _objectSpread({}, MD3LightTheme.colors)\n});\nvar materialDarkTheme = _objectSpread(_objectSpread({}, MD3DarkTheme), {}, {\n  mode: \"adaptive\",\n  colors: _objectSpread({}, MD3DarkTheme.colors)\n});\nApp = function App() {\n  return _jsx(Text, {\n    children: \"Hello World\"\n  });\n};\nexport default function Main() {\n  var appContext = useContext(AppContext);\n  var darkTheme = appContext.darkTheme,\n    setDarkTheme = appContext.setDarkTheme;\n  var _useState = useState(darkTheme),\n    _useState2 = _slicedToArray(_useState, 2),\n    paperDarkTheme = _useState2[0],\n    setPaperDarkTheme = _useState2[1];\n  function onThemeToggle() {\n    setDarkTheme(!darkTheme);\n    setPaperDarkTheme(!paperDarkTheme);\n  }\n  var theme = darkTheme ? materialDarkTheme : materialLightTheme;\n  return _jsx(AppContextProvider, {\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(App, {\n        theme: theme,\n        darkTheme: darkTheme,\n        changeTheme: onThemeToggle\n      })\n    })\n  });\n}\nAppRegistry.registerComponent(expo.name, function () {\n  return Main;\n});","map":{"version":3,"names":["useContext","useState","MD3LightTheme","MD3DarkTheme","Provider","PaperProvider","expo","AppContext","AppContextProvider","materialLightTheme","mode","colors","materialDarkTheme","App","Main","appContext","darkTheme","setDarkTheme","paperDarkTheme","setPaperDarkTheme","onThemeToggle","theme","AppRegistry","registerComponent","name"],"sources":["/Volumes/DATA/_Data/Thomas Catt/GitHub/ChessMultiplayer/frontend/App.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { AppRegistry } from 'react-native';\nimport { MD3LightTheme, MD3DarkTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { expo } from './app.json';\n// import App from './assets/views/App'\nimport { AppContext, AppContextProvider } from './assets/AppContext'\n\nconst materialLightTheme = {\n\t...MD3LightTheme,\n\tmode: \"adaptive\",\n\tcolors: {\n\t\t...MD3LightTheme.colors,\n\t}\n}\n\n\nconst materialDarkTheme = {\n\t...MD3DarkTheme,\n\tmode: \"adaptive\",\n\tcolors: {\n\t\t...MD3DarkTheme.colors,\n\t}\n}\n\nApp = () => <Text>Hello World</Text>\n\nexport default function Main() {\n\tconst appContext = useContext(AppContext)\n\tconst { darkTheme, setDarkTheme } = appContext\n\tconst [ paperDarkTheme, setPaperDarkTheme ] = useState(darkTheme)\n\n\tfunction onThemeToggle() {\n\t\tsetDarkTheme(!darkTheme)\n\t\tsetPaperDarkTheme(!paperDarkTheme)\n\t}\n\t\n\tlet theme = darkTheme ? materialDarkTheme : materialLightTheme\n\treturn (\n\t\t<AppContextProvider>\n\t\t\t<PaperProvider theme={theme}>\n\t\t\t\t<App theme={theme} darkTheme={darkTheme} changeTheme={onThemeToggle}/>\n\t\t\t</PaperProvider>\n\t\t</AppContextProvider>\n\t)\n}\n\nAppRegistry.registerComponent(expo.name, () => Main);"],"mappings":";;;;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE7C,SAASC,aAAa,EAAEC,YAAY,EAAEC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAC3F,SAASC,IAAI;AAEb,SAASC,UAAU,EAAEC,kBAAkB;AAA6B;AAEpE,IAAMC,kBAAkB,mCACpBP,aAAa;EAChBQ,IAAI,EAAE,UAAU;EAChBC,MAAM,oBACFT,aAAa,CAACS,MAAM;AACvB,EACD;AAGD,IAAMC,iBAAiB,mCACnBT,YAAY;EACfO,IAAI,EAAE,UAAU;EAChBC,MAAM,oBACFR,YAAY,CAACQ,MAAM;AACtB,EACD;AAEDE,GAAG,GAAG;EAAA,OAAM,KAAC,IAAI;IAAA;EAAA,EAAmB;AAAA;AAEpC,eAAe,SAASC,IAAI,GAAG;EAC9B,IAAMC,UAAU,GAAGf,UAAU,CAACO,UAAU,CAAC;EACzC,IAAQS,SAAS,GAAmBD,UAAU,CAAtCC,SAAS;IAAEC,YAAY,GAAKF,UAAU,CAA3BE,YAAY;EAC/B,gBAA8ChB,QAAQ,CAACe,SAAS,CAAC;IAAA;IAAzDE,cAAc;IAAEC,iBAAiB;EAEzC,SAASC,aAAa,GAAG;IACxBH,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBG,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACnC;EAEA,IAAIG,KAAK,GAAGL,SAAS,GAAGJ,iBAAiB,GAAGH,kBAAkB;EAC9D,OACC,KAAC,kBAAkB;IAAA,UAClB,KAAC,aAAa;MAAC,KAAK,EAAEY,KAAM;MAAA,UAC3B,KAAC,GAAG;QAAC,KAAK,EAAEA,KAAM;QAAC,SAAS,EAAEL,SAAU;QAAC,WAAW,EAAEI;MAAc;IAAE;EACvD,EACI;AAEvB;AAEAE,WAAW,CAACC,iBAAiB,CAACjB,IAAI,CAACkB,IAAI,EAAE;EAAA,OAAMV,IAAI;AAAA,EAAC"},"metadata":{},"sourceType":"module"}