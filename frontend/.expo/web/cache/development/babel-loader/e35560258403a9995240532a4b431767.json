{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, TextInput } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useContext, useState } from 'react';\nimport { AppContext } from \"../scripts/AppContext\";\nimport { broadcastTextMessage, onTextMessageReceive } from \"../scripts/Socket\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Home() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    textMessage = _useState2[0],\n    setTextMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messagesList = _useState4[0],\n    setMessagesList = _useState4[1];\n  var onSubmitTextMessage = function onSubmitTextMessage() {\n    setTextMessage(\"\");\n    broadcastTextMessage(textMessage);\n  };\n  return _jsx(View, {\n    children: _jsx(TextInput, {\n      style: {\n        margin: 10\n      },\n      value: textMessage,\n      label: \"Enter Message to broadcast!\",\n      onChangeText: setTextMessage,\n      onSubmitEditing: onSubmitTextMessage\n    })\n  });\n}","map":{"version":3,"names":["Text","TextInput","useContext","useState","AppContext","broadcastTextMessage","onTextMessageReceive","Home","textMessage","setTextMessage","messagesList","setMessagesList","onSubmitTextMessage","margin"],"sources":["E:/_Data/ThomasCattGithub/ChessMultiplayer/frontend/assets/views/Messaging.js"],"sourcesContent":["import { Text, TextInput } from 'react-native-paper';\r\nimport { View } from 'react-native';\r\nimport { useContext, useState } from 'react';\r\nimport { AppContext } from '../scripts/AppContext'\r\nimport { broadcastTextMessage, onTextMessageReceive } from '../scripts/Socket'\r\n\r\nexport default function Home() {\r\n    const [textMessage, setTextMessage] = useState(\"\")\r\n    const [messagesList, setMessagesList] = useState([])\r\n\r\n    const onSubmitTextMessage = () => {\r\n        setTextMessage(\"\")\r\n        broadcastTextMessage(textMessage)\r\n    }\r\n\r\n\r\n\r\n    return <View>\r\n        <TextInput style={{\r\n            margin: 10,\r\n        }} value={textMessage} label={\"Enter Message to broadcast!\"} onChangeText={setTextMessage} onSubmitEditing={onSubmitTextMessage}/>\r\n\r\n    </View>\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,SAAS,QAAQ,oBAAoB;AAAC;AAErD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,UAAU;AACnB,SAASC,oBAAoB,EAAEC,oBAAoB;AAA2B;AAE9E,eAAe,SAASC,IAAI,GAAG;EAC3B,gBAAsCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CK,WAAW;IAAEC,cAAc;EAClC,iBAAwCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CO,YAAY;IAAEC,eAAe;EAEpC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;IAC9BH,cAAc,CAAC,EAAE,CAAC;IAClBJ,oBAAoB,CAACG,WAAW,CAAC;EACrC,CAAC;EAID,OAAO,KAAC,IAAI;IAAA,UACR,KAAC,SAAS;MAAC,KAAK,EAAE;QACdK,MAAM,EAAE;MACZ,CAAE;MAAC,KAAK,EAAEL,WAAY;MAAC,KAAK,EAAE,6BAA8B;MAAC,YAAY,EAAEC,cAAe;MAAC,eAAe,EAAEG;IAAoB;EAAE,EAE/H;AACX"},"metadata":{},"sourceType":"module"}