{"ast":null,"code":"import color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\nexport var getCardCoverStyle = function getCardCoverStyle(_ref) {\n  var theme = _ref.theme,\n    index = _ref.index,\n    total = _ref.total;\n  var isV3 = theme.isV3,\n    roundness = theme.roundness;\n  if (index === 0) {\n    if (total === 1) {\n      return {\n        borderRadius: roundness\n      };\n    }\n    if (isV3) {\n      return {\n        borderRadius: roundness\n      };\n    }\n    return {\n      borderTopLeftRadius: roundness,\n      borderTopRightRadius: roundness\n    };\n  }\n  if (typeof total === 'number' && index === total - 1) {\n    return {\n      borderBottomLeftRadius: roundness\n    };\n  }\n  return undefined;\n};\nvar getBorderColor = function getBorderColor(_ref2) {\n  var theme = _ref2.theme;\n  if (theme.isV3) {\n    return theme.colors.outline;\n  }\n  if (theme.dark) {\n    return color(white).alpha(0.12).rgb().string();\n  }\n  return color(black).alpha(0.12).rgb().string();\n};\nvar getBackgroundColor = function getBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n    isMode = _ref3.isMode;\n  if (theme.isV3) {\n    if (isMode('contained')) {\n      return theme.colors.surfaceVariant;\n    }\n    return theme.colors.surface;\n  }\n  return undefined;\n};\nexport var getCardColors = function getCardColors(_ref4) {\n  var theme = _ref4.theme,\n    mode = _ref4.mode;\n  var isMode = function isMode(modeToCompare) {\n    return mode === modeToCompare;\n  };\n  return {\n    backgroundColor: getBackgroundColor({\n      theme: theme,\n      isMode: isMode\n    }),\n    borderColor: getBorderColor({\n      theme: theme\n    })\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB;AAKA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,MAQ3B;EAAA,IAPJC,KADgC,GAQ5BD,KAPJC,KADgC;IAEhCC,KAFgC,GAQ5BF,KANJE,KAFgC;IAGhCC,QAKIH,KALJG;EAMA,IAAQC,IAAF,GAAsBH,KAA5B,CAAQG,IAAF;IAAQC,YAAcJ,KAA5B,CAAcI;EAEd,IAAIH,KAAK,KAAK,CAAd,EAAiB;IACf,IAAIC,KAAK,KAAK,CAAd,EAAiB;MACf,OAAO;QACLG,YAAY,EAAED;MADT,CAAP;IAGD;IAED,IAAID,IAAJ,EAAU;MACR,OAAO;QACLE,YAAY,EAAED;MADT,CAAP;IAGD;IAED,OAAO;MACLE,mBAAmB,EAAEF,SADhB;MAELG,oBAAoB,EAAEH;IAFjB,CAAP;EAID;EAED,IAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;IACpD,OAAO;MACLM,sBAAsB,EAAEJ;IADnB,CAAP;EAGD;EAED,OAAOK,SAAP;AACD,CArCM;AAuCP,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,OAAiC;EAAA,IAA9BX,QAA8BW,MAA9BX;EACxB,IAAIA,KAAK,CAACG,IAAV,EAAgB;IACd,OAAOH,KAAK,CAACY,MAAN,CAAaC,OAApB;EACD;EAED,IAAIb,KAAK,CAACc,IAAV,EAAgB;IACd,OAAOnB,KAAK,CAACE,KAAD,CAAL,CAAakB,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EAAP;EACD;EACD,OAAOtB,KAAK,CAACC,KAAD,CAAL,CAAamB,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EAAP;AACD,CATD;AAWA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAGC,OAMrB;EAAA,IALJnB,KAD0B,GAMtBmB,MALJnB,KAD0B;IAE1BoB,SAIID,MAJJC;EAKA,IAAIpB,KAAK,CAACG,IAAV,EAAgB;IACd,IAAIiB,MAAM,CAAC,WAAD,CAAV,EAAyB;MACvB,OAAOpB,KAAK,CAACY,MAAN,CAAaS,cAApB;IACD;IACD,OAAOrB,KAAK,CAACY,MAAN,CAAaU,OAApB;EACD;EACD,OAAOb,SAAP;AACD,CAdD;AAgBA,OAAO,IAAMc,aAAa,GAAG,SAAhBA,aAAa,CAAGC,OAMvB;EAAA,IALJxB,KAD4B,GAMxBwB,MALJxB,KAD4B;IAE5ByB,OAIID,MAJJC;EAKA,IAAML,MAAM,GAAIM,SAAVN,MAAM,CAAIM,aAAD,EAA6B;IAC1C,OAAOD,IAAI,KAAKC,aAAhB;EACD,CAFD;EAIA,OAAO;IACLC,eAAe,EAAET,kBAAkB,CAAC;MAClClB,KADkC,EAClCA,KADkC;MAElCoB;IAFkC,CAAD,CAD9B;IAKLQ,WAAW,EAAElB,cAAc,CAAC;MAAEV;IAAF,CAAD;EALtB,CAAP;AAOD,CAlBM","names":["color","black","white","getCardCoverStyle","_ref","theme","index","total","isV3","roundness","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","undefined","getBorderColor","_ref2","colors","outline","dark","alpha","rgb","string","getBackgroundColor","_ref3","isMode","surfaceVariant","surface","getCardColors","_ref4","mode","modeToCompare","backgroundColor","borderColor"],"sources":["utils.tsx"],"sourcesContent":["import color from 'color';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { Theme } from '../../types';\n\ntype CardMode = 'elevated' | 'outlined' | 'contained';\n\nexport const getCardCoverStyle = ({\n  theme,\n  index,\n  total,\n}: {\n  theme: Theme;\n  index?: number;\n  total?: number;\n}) => {\n  const { isV3, roundness } = theme;\n\n  if (index === 0) {\n    if (total === 1) {\n      return {\n        borderRadius: roundness,\n      };\n    }\n\n    if (isV3) {\n      return {\n        borderRadius: roundness,\n      };\n    }\n\n    return {\n      borderTopLeftRadius: roundness,\n      borderTopRightRadius: roundness,\n    };\n  }\n\n  if (typeof total === 'number' && index === total - 1) {\n    return {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return undefined;\n};\n\nconst getBorderColor = ({ theme }: { theme: Theme }) => {\n  if (theme.isV3) {\n    return theme.colors.outline;\n  }\n\n  if (theme.dark) {\n    return color(white).alpha(0.12).rgb().string();\n  }\n  return color(black).alpha(0.12).rgb().string();\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isMode,\n}: {\n  theme: Theme;\n  isMode: (mode: CardMode) => boolean;\n}) => {\n  if (theme.isV3) {\n    if (isMode('contained')) {\n      return theme.colors.surfaceVariant;\n    }\n    return theme.colors.surface;\n  }\n  return undefined;\n};\n\nexport const getCardColors = ({\n  theme,\n  mode,\n}: {\n  theme: Theme;\n  mode: CardMode;\n}) => {\n  const isMode = (modeToCompare: CardMode) => {\n    return mode === modeToCompare;\n  };\n\n  return {\n    backgroundColor: getBackgroundColor({\n      theme,\n      isMode,\n    }),\n    borderColor: getBorderColor({ theme }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}