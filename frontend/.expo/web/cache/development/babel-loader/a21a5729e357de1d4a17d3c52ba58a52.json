{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, createContext } from 'react';\nimport { MD3LightTheme, MD3DarkTheme } from 'react-native-paper';\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AppContext = createContext();\nfunction AppContextProvider(props) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    Socket = _useState2[0],\n    setSocket = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    usersCount = _useState4[0],\n    setUsersCount = _useState4[1];\n  var clientId = uuidv4().split(\"-\")[0].toUpperCase();\n  var clientName = Platform.select({\n    android: \"AndroidClient\",\n    ios: \"iOSClient\",\n    default: \"WebClient\"\n  }) + \" \" + clientId;\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    darkTheme = _useState6[0],\n    setDarkTheme = _useState6[1];\n  var themes = {\n    light: _objectSpread(_objectSpread({}, MD3LightTheme), {}, {\n      mode: \"adaptive\",\n      colors: _objectSpread({}, MD3LightTheme.colors)\n    }),\n    dark: _objectSpread(_objectSpread({}, MD3DarkTheme), {}, {\n      mode: \"adaptive\",\n      colors: _objectSpread({}, MD3DarkTheme.colors)\n    }),\n    current: function current() {\n      return darkTheme ? themes.dark : themes.light;\n    }\n  };\n  return _jsx(AppContext.Provider, {\n    value: {\n      Socket: Socket,\n      setSocket: setSocket,\n      usersCount: usersCount,\n      setUsersCount: setUsersCount,\n      clientId: clientId,\n      clientName: clientName,\n      darkTheme: darkTheme,\n      setDarkTheme: setDarkTheme,\n      themes: themes\n    },\n    children: props.children\n  });\n}\nexport { AppContextProvider, AppContext };","map":{"version":3,"names":["useState","createContext","MD3LightTheme","MD3DarkTheme","v4","uuidv4","AppContext","AppContextProvider","props","Socket","setSocket","usersCount","setUsersCount","clientId","split","toUpperCase","clientName","Platform","select","android","ios","default","darkTheme","setDarkTheme","themes","light","mode","colors","dark","current","children"],"sources":["E:/_Data/ThomasCattGithub/ChessMultiplayer/frontend/assets/scripts/AppContext.js"],"sourcesContent":["import { useState, createContext } from 'react';\r\nimport { MD3LightTheme, MD3DarkTheme } from 'react-native-paper';\r\nimport 'react-native-get-random-values'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { Platform } from 'react-native';\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction AppContextProvider(props) {\r\n    const [Socket, setSocket] = useState();\r\n    const [usersCount, setUsersCount] = useState(-1);\r\n    const clientId = uuidv4().split(\"-\")[0].toUpperCase()\r\n    const clientName = Platform.select({android: \"AndroidClient\", ios: \"iOSClient\", default: \"WebClient\"}) + \" \" + clientId\r\n\tconst [darkTheme, setDarkTheme] = useState(true)\r\n    const themes = {\r\n        // Set status bar color in these themes\r\n        light: {\r\n            ...MD3LightTheme,\r\n            mode: \"adaptive\",\r\n            colors: {\r\n                ...MD3LightTheme.colors,\r\n            }\r\n        },      \r\n        dark: {\r\n            ...MD3DarkTheme,\r\n            mode: \"adaptive\",\r\n            colors: {\r\n                ...MD3DarkTheme.colors,\r\n            }\r\n        },\r\n        current: () => darkTheme ? themes.dark : themes.light\r\n    }\r\n\r\n    return <AppContext.Provider value={{\r\n        Socket,\r\n        setSocket,\r\n        usersCount,\r\n        setUsersCount,\r\n        clientId,\r\n        clientName,\r\n        darkTheme,\r\n        setDarkTheme,\r\n        themes\r\n    }}>\r\n        {props.children}\r\n    </AppContext.Provider>\r\n}\r\n\r\nexport {\r\n    AppContextProvider,\r\n    AppContext\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAC/C,SAASC,aAAa,EAAEC,YAAY,QAAQ,oBAAoB;AAChE,OAAO,gCAAgC;AACvC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAA;AAAA;AAGnC,IAAMC,UAAU,GAAGL,aAAa,EAAE;AAElC,SAASM,kBAAkB,CAACC,KAAK,EAAE;EAC/B,gBAA4BR,QAAQ,EAAE;IAAA;IAA/BS,MAAM;IAAEC,SAAS;EACxB,iBAAoCV,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAAzCW,UAAU;IAAEC,aAAa;EAChC,IAAMC,QAAQ,GAAGR,MAAM,EAAE,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;EACrD,IAAMC,UAAU,GAAGC,QAAQ,CAACC,MAAM,CAAC;IAACC,OAAO,EAAE,eAAe;IAAEC,GAAG,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAW,CAAC,CAAC,GAAG,GAAG,GAAGR,QAAQ;EAC1H,iBAAkCb,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCsB,SAAS;IAAEC,YAAY;EAC3B,IAAMC,MAAM,GAAG;IAEXC,KAAK,kCACEvB,aAAa;MAChBwB,IAAI,EAAE,UAAU;MAChBC,MAAM,oBACCzB,aAAa,CAACyB,MAAM;IAC1B,EACJ;IACDC,IAAI,kCACGzB,YAAY;MACfuB,IAAI,EAAE,UAAU;MAChBC,MAAM,oBACCxB,YAAY,CAACwB,MAAM;IACzB,EACJ;IACDE,OAAO,EAAE;MAAA,OAAMP,SAAS,GAAGE,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACC,KAAK;IAAA;EACzD,CAAC;EAED,OAAO,KAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC/BhB,MAAM,EAANA,MAAM;MACNC,SAAS,EAATA,SAAS;MACTC,UAAU,EAAVA,UAAU;MACVC,aAAa,EAAbA,aAAa;MACbC,QAAQ,EAARA,QAAQ;MACRG,UAAU,EAAVA,UAAU;MACVM,SAAS,EAATA,SAAS;MACTC,YAAY,EAAZA,YAAY;MACZC,MAAM,EAANA;IACJ,CAAE;IAAA,UACGhB,KAAK,CAACsB;EAAQ,EACG;AAC1B;AAEA,SACIvB,kBAAkB,EAClBD,UAAU"},"metadata":{},"sourceType":"module"}