{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"component\"];\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nimport Caption from \"../Typography/v2/Caption\";\nimport Title from \"../Typography/v2/Title\";\nimport Text from \"../Typography/Text\";\nvar LEFT_SIZE = 40;\n\nvar CardTitle = function CardTitle(_ref) {\n  var title = _ref.title,\n    titleStyle = _ref.titleStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$titleVariant = _ref.titleVariant,\n    titleVariant = _ref$titleVariant === void 0 ? 'bodyLarge' : _ref$titleVariant,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    _ref$subtitleNumberOf = _ref.subtitleNumberOfLines,\n    subtitleNumberOfLines = _ref$subtitleNumberOf === void 0 ? 1 : _ref$subtitleNumberOf,\n    _ref$subtitleVariant = _ref.subtitleVariant,\n    subtitleVariant = _ref$subtitleVariant === void 0 ? 'bodyMedium' : _ref$subtitleVariant,\n    left = _ref.left,\n    leftStyle = _ref.leftStyle,\n    right = _ref.right,\n    rightStyle = _ref.rightStyle,\n    style = _ref.style,\n    theme = _ref.theme;\n  var titleComponent = function titleComponent(props) {\n    return theme.isV3 ? React.createElement(Text, props) : React.createElement(Title, props);\n  };\n  var subtitleComponent = function subtitleComponent(props) {\n    return theme.isV3 ? React.createElement(Text, props) : React.createElement(Caption, props);\n  };\n  var TextComponent = React.memo(function (_ref2) {\n    var component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n    return React.createElement(component, rest);\n  });\n  return React.createElement(View, {\n    style: [styles.container, {\n      minHeight: subtitle || left || right ? 72 : 50\n    }, style]\n  }, left ? React.createElement(View, {\n    style: [styles.left, leftStyle]\n  }, left({\n    size: LEFT_SIZE\n  })) : null, React.createElement(View, {\n    style: [styles.titles]\n  }, title && React.createElement(TextComponent, {\n    component: titleComponent,\n    style: [styles.title, {\n      marginBottom: subtitle ? 0 : 2\n    }, titleStyle],\n    numberOfLines: titleNumberOfLines,\n    variant: titleVariant\n  }, title), subtitle && React.createElement(TextComponent, {\n    component: subtitleComponent,\n    style: [styles.subtitle, subtitleStyle],\n    numberOfLines: subtitleNumberOfLines,\n    variant: subtitleVariant\n  }, subtitle)), React.createElement(View, {\n    style: rightStyle\n  }, right ? right({\n    size: 24\n  }) : null));\n};\nCardTitle.displayName = 'Card.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16\n  },\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE\n  },\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    minHeight: 30,\n    paddingRight: 16\n  },\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n    paddingRight: 16\n  }\n});\nexport default withTheme(CardTitle);\n\nexport { CardTitle };","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AASA,SAASC,SAAT;AAEA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AA4FA,IAAMC,SAAS,GAAG,EAAlB;;AA0BA,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAGC,MAeL;EAAA,IAdXC,KADiB,GAeND,KAdXC,KADiB;IAEjBC,UAFiB,GAeNF,KAbXE,UAFiB;IAAA,wBAeNF,KAZXG,kBAAkB;IAAlBA,kBAAkB,sCAAG,CAHJ;IAAA,oBAeNH,KAXXI,YAAY;IAAZA,YAAY,kCAAG,WAJE;IAKjBC,QALiB,GAeNL,KAVXK,QALiB;IAMjBC,aANiB,GAeNN,KATXM,aANiB;IAAA,wBAeNN,KARXO,qBAAqB;IAArBA,qBAAqB,sCAAG,CAPP;IAAA,uBAeNP,KAPXQ,eAAe;IAAfA,eAAe,qCAAG,YARD;IASjBC,IATiB,GAeNT,KANXS,IATiB;IAUjBC,SAViB,GAeNV,KALXU,SAViB;IAWjBC,KAXiB,GAeNX,KAJXW,KAXiB;IAYjBC,UAZiB,GAeNZ,KAHXY,UAZiB;IAajBC,KAbiB,GAeNb,KAFXa,KAbiB;IAcjBC,QACWd,KADXc;EAEA,IAAMC,cAAc,GAAIC,SAAlBD,cAAc,CAAIC,KAAD;IAAA,OACrBF,KAAK,CAACG,IAAN,GAAaxB,oBAACI,IAAD,EAAUmB,KAAV,CAAb,GAAmCvB,oBAACG,KAAD,EAAWoB,KAAX,CADrC;EAAA;EAGA,IAAME,iBAAiB,GAAIF,SAArBE,iBAAiB,CAAIF,KAAD;IAAA,OACxBF,KAAK,CAACG,IAAN,GAAaxB,oBAACI,IAAD,EAAUmB,KAAV,CAAb,GAAmCvB,oBAACE,OAAD,EAAaqB,KAAb,CADrC;EAAA;EAGA,IAAMG,aAAa,GAAG1B,KAAK,CAAC2B,IAAN,CAAW;IAAA,IAAGC,SAAF,GAADC,MAAGD,SAAF;MAAgBE,gCAAjBD;IAAA,OAC/B7B,KAAK,CAAC+B,aAAN,CAAoBH,SAApB,EAA+BE,IAA/B,CAD+B;EAAA,CAAX,CAAtB;EAGA,OACE9B,oBAACgC,IAAD;IACEZ,KAAK,EAAE,CACLa,MAAM,CAACC,SADF,EAEL;MAAEC,SAAS,EAAEvB,QAAQ,IAAII,IAAZ,IAAoBE,KAApB,GAA4B,EAA5B,GAAiC;IAA9C,CAFK,EAGLE,KAHK;EADT,GAOGJ,IAAI,GACHhB,oBAACgC,IAAD;IAAMZ,KAAK,EAAE,CAACa,MAAM,CAACjB,IAAR,EAAcC,SAAd;EAAb,GACGD,IAAI,CAAC;IACJoB,IAAI,EAAE/B;EADF,CAAD,CADP,CADG,GAMD,IAbN,EAeEL,oBAACgC,IAAD;IAAMZ,KAAK,EAAE,CAACa,MAAM,CAACI,MAAR;EAAb,GACG7B,KAAK,IACJR,oBAAC0B,aAAD;IACEE,SAAS,EAAEN,cADb;IAEEF,KAAK,EAAE,CACLa,MAAM,CAACzB,KADF,EAEL;MAAE8B,YAAY,EAAE1B,QAAQ,GAAG,CAAH,GAAO;IAA/B,CAFK,EAGLH,UAHK,CAFT;IAOE8B,aAAa,EAAE7B,kBAPjB;IAQE8B,OAAO,EAAE7B;EARX,GAUGH,KAVH,CAFJ,EAeGI,QAAQ,IACPZ,oBAAC0B,aAAD;IACEE,SAAS,EAAEH,iBADb;IAEEL,KAAK,EAAE,CAACa,MAAM,CAACrB,QAAR,EAAkBC,aAAlB,CAFT;IAGE0B,aAAa,EAAEzB,qBAHjB;IAIE0B,OAAO,EAAEzB;EAJX,GAMGH,QANH,CAhBJ,CAfF,EAyCEZ,oBAACgC,IAAD;IAAMZ,KAAK,EAAED;EAAb,GAA0BD,KAAK,GAAGA,KAAK,CAAC;IAAEkB,IAAI,EAAE;EAAR,CAAD,CAAR,GAAyB,IAAxD,CAzCF,CADF;AA6CD,CAtED;AAwEA9B,SAAS,CAACmC,WAAV,GAAwB,YAAxB;AAEA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC/BT,SAAS,EAAE;IACTU,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,eAHP;IAITC,WAAW,EAAE;EAJJ,CADoB;EAQ/B/B,IAAI,EAAE;IACJ8B,cAAc,EAAE,QADZ;IAEJE,WAAW,EAAE,EAFT;IAGJC,MAAM,EAAE5C,SAHJ;IAIJ6C,KAAK,EAAE7C;EAJH,CARyB;EAe/BgC,MAAM,EAAE;IACNc,IAAI,EAAE,CADA;IAENP,aAAa,EAAE,QAFT;IAGNE,cAAc,EAAE;EAHV,CAfuB;EAqB/BtC,KAAK,EAAE;IACL2B,SAAS,EAAE,EADN;IAELiB,YAAY,EAAE;EAFT,CArBwB;EA0B/BxC,QAAQ,EAAE;IACRuB,SAAS,EAAE,EADH;IAERkB,cAAc,EAAE,CAFR;IAGRD,YAAY,EAAE;EAHN;AA1BqB,CAAlB,CAAf;AAiCA,eAAenD,SAAS,CAACK,SAAD,CAAxB;;AAGA,SAASA,SAAT","names":["React","withTheme","Caption","Title","Text","LEFT_SIZE","CardTitle","_ref","title","titleStyle","titleNumberOfLines","titleVariant","subtitle","subtitleStyle","subtitleNumberOfLines","subtitleVariant","left","leftStyle","right","rightStyle","style","theme","titleComponent","props","isV3","subtitleComponent","TextComponent","memo","component","_ref2","rest","createElement","View","styles","container","minHeight","size","titles","marginBottom","numberOfLines","variant","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","flex","paddingRight","marginVertical"],"sources":["CardTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport type { MD3TypescaleKey, Theme } from '../../types';\nimport Caption from '../Typography/v2/Caption';\nimport Title from '../Typography/v2/Title';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the title.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Title text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  titleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the subtitle.\n   */\n  subtitleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Subtitle text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  subtitleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardTitle = ({\n  title,\n  titleStyle,\n  titleNumberOfLines = 1,\n  titleVariant = 'bodyLarge',\n  subtitle,\n  subtitleStyle,\n  subtitleNumberOfLines = 1,\n  subtitleVariant = 'bodyMedium',\n  left,\n  leftStyle,\n  right,\n  rightStyle,\n  style,\n  theme,\n}: Props) => {\n  const titleComponent = (props: any) =>\n    theme.isV3 ? <Text {...props} /> : <Title {...props} />;\n\n  const subtitleComponent = (props: any) =>\n    theme.isV3 ? <Text {...props} /> : <Caption {...props} />;\n\n  const TextComponent = React.memo(({ component, ...rest }: any) =>\n    React.createElement(component, rest)\n  );\n  return (\n    <View\n      style={[\n        styles.container,\n        { minHeight: subtitle || left || right ? 72 : 50 },\n        style,\n      ]}\n    >\n      {left ? (\n        <View style={[styles.left, leftStyle]}>\n          {left({\n            size: LEFT_SIZE,\n          })}\n        </View>\n      ) : null}\n\n      <View style={[styles.titles]}>\n        {title && (\n          <TextComponent\n            component={titleComponent}\n            style={[\n              styles.title,\n              { marginBottom: subtitle ? 0 : 2 },\n              titleStyle,\n            ]}\n            numberOfLines={titleNumberOfLines}\n            variant={titleVariant}\n          >\n            {title}\n          </TextComponent>\n        )}\n        {subtitle && (\n          <TextComponent\n            component={subtitleComponent}\n            style={[styles.subtitle, subtitleStyle]}\n            numberOfLines={subtitleNumberOfLines}\n            variant={subtitleVariant}\n          >\n            {subtitle}\n          </TextComponent>\n        )}\n      </View>\n      <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n    </View>\n  );\n};\n\nCardTitle.displayName = 'Card.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  title: {\n    minHeight: 30,\n    paddingRight: 16,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n    paddingRight: 16,\n  },\n});\n\nexport default withTheme(CardTitle);\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"]},"metadata":{},"sourceType":"module"}