{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport setColor from 'color';\nimport { grey400, grey800, grey50, grey700, white, black } from \"../../styles/themes/v2/colors\";\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n    color = _ref.color;\n  if (color) {\n    return color;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n    disabled = _ref2.disabled,\n    value = _ref2.value,\n    checkedColor = _ref2.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return undefined;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n  if (value) {\n    return checkedColor;\n  }\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n    disabled = _ref3.disabled,\n    value = _ref3.value,\n    checkedColor = _ref3.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return checkedColor;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\nexport var getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n    disabled = _ref4.disabled,\n    value = _ref4.value,\n    color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};","map":{"version":3,"mappings":"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","names":["setColor","grey400","grey800","grey50","grey700","white","black","getCheckedColor","_ref","theme","color","isV3","colors","primary","accent","getThumbTintColor","_ref2","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","getOnTintColor","_ref3","alpha","rgb","string","getSwitchColor","_ref4","onTintColor","thumbTintColor"],"sources":["utils.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { Theme } from '../../types';\n\ntype BaseProps = {\n  theme: Theme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: Theme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}